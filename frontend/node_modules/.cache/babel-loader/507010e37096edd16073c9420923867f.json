{"ast":null,"code":"import _regeneratorRuntime from \"/home/thevpaliy/projects/slack-temp/slack/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/thevpaliy/projects/slack-temp/slack/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar sleep = function sleep(time) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, time);\n  });\n};\n\nvar generateMe = {\n  id: 1,\n  avatarUrl: 'https://github.com/',\n  username: 'vpaliy',\n  fullName: 'Vasyl Paliy'\n};\nvar user = {\n  id: 1,\n  avatarUrl: 'https://github.com/',\n  username: 'Mike',\n  fullName: 'Mike Salmon',\n  active: false,\n  presence: {\n    state: 'online'\n  }\n};\n\nvar generateUsers = function generateUsers() {\n  return [{\n    id: 1,\n    avatarUrl: 'https://github.com/',\n    username: 'Mike',\n    fullName: 'Mike Salmon',\n    active: false\n  }, {\n    id: 2,\n    avatarUrl: 'https://github.com/',\n    username: 'Mike',\n    fullName: 'John Salmon',\n    active: false\n  }, {\n    id: 3,\n    avatarUrl: 'https://github.com/',\n    username: 'Mike',\n    fullName: 'Andrew Salmon',\n    active: false\n  }, {\n    id: 4,\n    avatarUrl: 'https://github.com/',\n    username: 'Mike',\n    fullName: 'Nick Salmon',\n    active: false\n  }];\n};\n\nvar generateRooms = function generateRooms() {\n  return [{\n    id: 6,\n    roomName: 'Twitter Team',\n    active: false\n  }, {\n    id: 7,\n    roomName: 'Facebook Team',\n    active: false\n  }, {\n    id: 8,\n    roomName: 'Google Team',\n    active: false\n  }];\n};\n\nvar generateChat = function generateChat(id) {\n  if (id % 2 === 0) {\n    return {\n      id: id,\n      header: {\n        title: 'First chat ever',\n        memberCount: 300,\n        description: 'A chat that which objective is to test the app'\n      },\n      periods: [{\n        date: 'Monday, November 26th',\n        messages: [{\n          author: user,\n          time: '15:30 PM',\n          content: 'I am going to take a day off tomorrow. Anyone need help with anything?'\n        }, {\n          author: user,\n          time: '8:30 PM',\n          content: 'Could someone take a look at my MR?'\n        }, {\n          author: user,\n          time: '15:30 PM',\n          content: 'I am going to take a day off tomorrow. Anyone need help with anything?'\n        }, {\n          author: user,\n          time: '8:30 PM',\n          content: 'Could someone take a look at my MR?'\n        }, {\n          author: user,\n          time: '15:30 PM',\n          content: 'I am going to take a day off tomorrow. Anyone need help with anything?'\n        }, {\n          author: user,\n          time: '8:30 PM',\n          content: 'Could someone take a look at my MR?'\n        }]\n      }],\n      isLoading: true\n    };\n  }\n\n  return {\n    id: id,\n    header: {\n      title: 'Another chat',\n      memberCount: 300,\n      description: 'Just a second chat that does not matter'\n    },\n    periods: [{\n      date: 'Monday, December 1st',\n      messages: [{\n        author: user,\n        time: '8:30 PM',\n        content: 'Could someone take a look at my MR?'\n      }, {\n        author: user,\n        time: '15:30 PM',\n        content: 'I am going to take a day off tomorrow. Anyone need help with anything?'\n      }, {\n        author: user,\n        time: '8:30 PM',\n        content: 'Could someone take a look at my MR?'\n      }]\n    }],\n    isLoading: true\n  };\n};\n\nvar getPeriodPage = function getPeriodPage(id, page) {};\n\nexport var getMe =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return sleep(1000);\n\n          case 2:\n            return _context.abrupt(\"return\", {\n              status: 20,\n              payload: generateMe\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function getMe() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getUsers =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return sleep(1000);\n\n          case 2:\n            return _context2.abrupt(\"return\", {\n              status: 200,\n              payload: generateUsers()\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n\n  return function getUsers() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getRooms =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3() {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return sleep(1000);\n\n          case 2:\n            return _context3.abrupt(\"return\", {\n              status: 200,\n              payload: generateRooms()\n            });\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this);\n  }));\n\n  return function getRooms() {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var dummy =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(message) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return sleep(1000);\n\n          case 2:\n            console.log(message);\n            throw new Error();\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, this);\n  }));\n\n  return function dummy(_x) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var getChat =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(id) {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return sleep(500);\n\n          case 2:\n            return _context5.abrupt(\"return\", generateChat(id));\n\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, this);\n  }));\n\n  return function getChat(_x2) {\n    return _ref5.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/home/thevpaliy/projects/slack-temp/slack/src/backend.js"],"names":["sleep","time","Promise","resolve","setTimeout","generateMe","id","avatarUrl","username","fullName","user","active","presence","state","generateUsers","generateRooms","roomName","generateChat","header","title","memberCount","description","periods","date","messages","author","content","isLoading","getPeriodPage","page","getMe","status","payload","getUsers","getRooms","dummy","message","console","log","Error","getChat"],"mappings":"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","sourcesContent":["const sleep = (time) =>  new Promise(\n  resolve => setTimeout(resolve, time)\n);\n\nconst generateMe =  {\n  id: 1,\n  avatarUrl: 'https://github.com/',\n  username: 'vpaliy',\n  fullName: 'Vasyl Paliy'\n}\n\nconst user = {\n   id: 1,\n   avatarUrl: 'https://github.com/',\n   username: 'Mike',\n   fullName: 'Mike Salmon',\n   active: false,\n   presence: {\n     state: 'online'\n   }\n}\n\nconst generateUsers = () => {\n  return [\n      {\n       id: 1,\n       avatarUrl: 'https://github.com/',\n       username: 'Mike',\n       fullName: 'Mike Salmon',\n       active: false\n     },\n     {\n      id: 2,\n      avatarUrl: 'https://github.com/',\n      username: 'Mike',\n      fullName: 'John Salmon',\n      active: false\n    },\n    {\n     id: 3,\n     avatarUrl: 'https://github.com/',\n     username: 'Mike',\n     fullName: 'Andrew Salmon',\n     active: false\n   },\n     {\n      id: 4,\n      avatarUrl: 'https://github.com/',\n      username: 'Mike',\n      fullName: 'Nick Salmon',\n      active: false\n    }\n  ]\n}\n\nconst generateRooms = () => {\n  return [\n    {\n      id: 6,\n      roomName: 'Twitter Team',\n      active: false\n    },\n    {\n      id: 7,\n      roomName: 'Facebook Team',\n      active: false\n    },\n    {\n      id: 8,\n      roomName: 'Google Team',\n      active: false\n    }\n  ]\n}\n\nconst generateChat = id => {\n  if (id % 2 === 0) {\n    return {\n      id: id,\n      header: {\n        title: 'First chat ever',\n        memberCount: 300,\n        description: 'A chat that which objective is to test the app'\n      },\n      periods: [{\n        date: 'Monday, November 26th',\n        messages:[{\n          author: user,\n          time: '15:30 PM',\n          content: 'I am going to take a day off tomorrow. Anyone need help with anything?'\n        },{\n          author: user,\n          time: '8:30 PM',\n          content: 'Could someone take a look at my MR?'\n        },{\n          author: user,\n          time: '15:30 PM',\n          content: 'I am going to take a day off tomorrow. Anyone need help with anything?'\n        },{\n          author: user,\n          time: '8:30 PM',\n          content: 'Could someone take a look at my MR?'\n        },{\n          author: user,\n          time: '15:30 PM',\n          content: 'I am going to take a day off tomorrow. Anyone need help with anything?'\n        },{\n          author: user,\n          time: '8:30 PM',\n          content: 'Could someone take a look at my MR?'\n        }]\n      }],\n      isLoading: true\n    }\n  }\n  return {\n    id: id,\n    header: {\n      title: 'Another chat',\n      memberCount: 300,\n      description: 'Just a second chat that does not matter'\n    },\n    periods: [{\n      date: 'Monday, December 1st',\n      messages:[{\n        author: user,\n        time: '8:30 PM',\n        content: 'Could someone take a look at my MR?'\n      },{\n        author: user,\n        time: '15:30 PM',\n        content: 'I am going to take a day off tomorrow. Anyone need help with anything?'\n      },{\n        author: user,\n        time: '8:30 PM',\n        content: 'Could someone take a look at my MR?'\n      }]\n    }],\n    isLoading: true\n  }\n}\n\nconst getPeriodPage = (id, page) => {\n\n}\n\nexport const getMe = async() => {\n  await sleep(1000);\n  return {\n    status: 20,\n    payload: generateMe\n  };\n}\n\nexport const getUsers = async() => {\n  await sleep(1000)\n  return {\n    status: 200,\n    payload: generateUsers()\n  }\n}\n\nexport const getRooms = async() => {\n  await sleep(1000)\n  return {\n    status: 200,\n    payload: generateRooms()\n  }\n}\n\nexport const dummy = async(message) => {\n  await sleep(1000)\n  console.log(message)\n  throw new Error()\n}\n\nexport const getChat = async(id) => {\n  await sleep(500)\n  return generateChat(id)\n}\n"]},"metadata":{},"sourceType":"module"}