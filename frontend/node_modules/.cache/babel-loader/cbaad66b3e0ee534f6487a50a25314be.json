{"ast":null,"code":"import _classCallCheck from \"/home/thevpaliy/projects/slack-temp/slack/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/thevpaliy/projects/slack-temp/slack/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/thevpaliy/projects/slack-temp/slack/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/thevpaliy/projects/slack-temp/slack/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/thevpaliy/projects/slack-temp/slack/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/thevpaliy/projects/slack-temp/slack/src/components/ContactsPanel/index.js\";\nimport React from 'react';\nimport PeopleGroup from '../.PeopleGroup';\nimport RoomsGroup from './RoomsGroup';\nimport { connect } from 'react-redux';\nimport { fetchContacts, deleteUser, deleteRoom, getChat } from '../../actions';\n\nvar UserProfile = function UserProfile(_ref) {\n  var user = _ref.user;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  });\n};\n\nvar ContactsPanel =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ContactsPanel, _React$Component);\n\n  function ContactsPanel() {\n    _classCallCheck(this, ContactsPanel);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ContactsPanel).apply(this, arguments));\n  }\n\n  _createClass(ContactsPanel, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.onLoad();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          user = _this$props.user,\n          rooms = _this$props.rooms,\n          people = _this$props.people,\n          onUserRemoved = _this$props.onUserRemoved,\n          onRoomRemoved = _this$props.onRoomRemoved,\n          onSelected = _this$props.onSelected;\n      return React.createElement(\"div\", {\n        className: \"h-100 channels-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(UserProfile, {\n        user: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(RoomsGroup, {\n        title: \"Rooms\",\n        items: rooms,\n        onRemoved: onRoomRemoved,\n        onSelected: onSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(PeopleGroup, {\n        title: \"People\",\n        items: people,\n        onRemoved: onUserRemoved,\n        onSelected: onSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ContactsPanel;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.contacts.user,\n    people: state.contacts.people,\n    rooms: state.contacts.rooms,\n    isLoading: state.contacts.isLoading\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onUserRemoved: function onUserRemoved(user, index) {\n      return dispatch(deleteUser(user, index));\n    },\n    onRoomRemoved: function onRoomRemoved(room, index) {\n      return dispatch(deleteRoom(room, index));\n    },\n    onLoad: function onLoad() {\n      return dispatch(fetchContacts());\n    },\n    onSelected: function onSelected(id) {\n      return dispatch(getChat(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsPanel);","map":{"version":3,"sources":["/home/thevpaliy/projects/slack-temp/slack/src/components/ContactsPanel/index.js"],"names":["React","PeopleGroup","RoomsGroup","connect","fetchContacts","deleteUser","deleteRoom","getChat","UserProfile","user","ContactsPanel","props","onLoad","rooms","people","onUserRemoved","onRoomRemoved","onSelected","Component","mapStateToProps","state","contacts","isLoading","mapDispatchToProps","dispatch","index","room","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,aADF,EAEEC,UAFF,EAGEC,UAHF,EAIEC,OAJF,QAKO,eALP;;AAOA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADkB;AAAA,CAApB;;IAKMC,a;;;;;;;;;;;;;yCACiB;AACnB,WAAKC,KAAL,CAAWC,MAAX;AACD;;;6BAEQ;AAAA,wBAQH,KAAKD,KARF;AAAA,UAELF,IAFK,eAELA,IAFK;AAAA,UAGLI,KAHK,eAGLA,KAHK;AAAA,UAILC,MAJK,eAILA,MAJK;AAAA,UAKLC,aALK,eAKLA,aALK;AAAA,UAMLC,aANK,eAMLA,aANK;AAAA,UAOLC,UAPK,eAOLA,UAPK;AASP,aACE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAER,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,UAAD;AACE,QAAA,KAAK,EAAC,OADR;AAEE,QAAA,KAAK,EAAEI,KAFT;AAGE,QAAA,SAAS,EAAEG,aAHb;AAIE,QAAA,UAAU,EAAEC,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAQE,oBAAC,WAAD;AACE,QAAA,KAAK,EAAC,QADR;AAEE,QAAA,KAAK,EAAEH,MAFT;AAGE,QAAA,SAAS,EAAEC,aAHb;AAIE,QAAA,UAAU,EAAEE,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF;AAiBD;;;;EA/ByBjB,KAAK,CAACkB,S;;AAkClC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCX,IAAAA,IAAI,EAAEW,KAAK,CAACC,QAAN,CAAeZ,IADW;AAEhCK,IAAAA,MAAM,EAAEM,KAAK,CAACC,QAAN,CAAeP,MAFS;AAGhCD,IAAAA,KAAK,EAAEO,KAAK,CAACC,QAAN,CAAeR,KAHU;AAIhCS,IAAAA,SAAS,EAAEF,KAAK,CAACC,QAAN,CAAeC;AAJM,GAAL;AAAA,CAA7B;;AAOA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCT,IAAAA,aAAa,EAAE,uBAACN,IAAD,EAAOgB,KAAP;AAAA,aACbD,QAAQ,CAACnB,UAAU,CAACI,IAAD,EAAOgB,KAAP,CAAX,CADK;AAAA,KADuB;AAItCT,IAAAA,aAAa,EAAE,uBAACU,IAAD,EAAOD,KAAP;AAAA,aACbD,QAAQ,CAAClB,UAAU,CAACoB,IAAD,EAAOD,KAAP,CAAX,CADK;AAAA,KAJuB;AAOtCb,IAAAA,MAAM,EAAE;AAAA,aACNY,QAAQ,CAACpB,aAAa,EAAd,CADF;AAAA,KAP8B;AAUtCa,IAAAA,UAAU,EAAE,oBAAAU,EAAE;AAAA,aACZH,QAAQ,CAACjB,OAAO,CAACoB,EAAD,CAAR,CADI;AAAA;AAVwB,GAAL;AAAA,CAAnC;;AAcA,eAAexB,OAAO,CACpBgB,eADoB,EAEpBI,kBAFoB,CAAP,CAGbb,aAHa,CAAf","sourcesContent":["import React from 'react'\nimport PeopleGroup from '../.PeopleGroup'\nimport RoomsGroup from './RoomsGroup'\nimport { connect } from 'react-redux'\nimport {\n  fetchContacts,\n  deleteUser,\n  deleteRoom,\n  getChat\n} from '../../actions'\n\nconst UserProfile = ({ user }) => (\n  <div>\n  </div>\n)\n\nclass ContactsPanel extends React.Component {\n  componentWillMount() {\n    this.props.onLoad()\n  }\n\n  render() {\n    const {\n      user,\n      rooms,\n      people,\n      onUserRemoved,\n      onRoomRemoved,\n      onSelected\n    } = this.props\n    return (\n      <div className=\"h-100 channels-container\">\n        <UserProfile user={user} />\n        <RoomsGroup\n          title=\"Rooms\"\n          items={rooms}\n          onRemoved={onRoomRemoved}\n          onSelected={onSelected}\n        />\n        <PeopleGroup\n          title=\"People\"\n          items={people}\n          onRemoved={onUserRemoved}\n          onSelected={onSelected}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.contacts.user,\n  people: state.contacts.people,\n  rooms: state.contacts.rooms,\n  isLoading: state.contacts.isLoading\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onUserRemoved: (user, index) =>\n    dispatch(deleteUser(user, index)),\n\n  onRoomRemoved: (room, index) =>\n    dispatch(deleteRoom(room, index)),\n\n  onLoad: () =>\n    dispatch(fetchContacts()),\n\n  onSelected: id =>\n    dispatch(getChat(id))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ContactsPanel)\n"]},"metadata":{},"sourceType":"module"}