{"ast":null,"code":"import Promise from 'bluebird';\nimport { Users, People, Rooms } from '../requests';\nexport var fetchContacts = function fetchContacts() {\n  return function (dispatch) {\n    dispatch({\n      type: 'contacts-start'\n    });\n    Promise.join(Users.getMe(), People.getPeople(), Rooms.getRooms(), function (userResponse, peopleResponse, roomsResponse) {\n      dispatch({\n        type: 'contacts-finish',\n        user: userResponse.payload,\n        people: peopleResponse.payload,\n        rooms: roomsResponse.payload\n      });\n    });\n  };\n};\nexport var deleteUser = function deleteUser(user, index) {\n  return function (dispatch) {\n    dispatch({\n      type: 'delete-user-start',\n      user: user\n    });\n    Users.delete(user).catch(function (error) {\n      dispatch({\n        type: 'delete-user-failed',\n        user: user,\n        index: index\n      });\n    });\n  };\n};\nexport var deleteRoom = function deleteRoom(room, index) {\n  return function (dispatch) {\n    dispatch({\n      type: 'delete-room-start',\n      room: room\n    });\n    Rooms.delete(room).catch(function (error) {\n      dispatch({\n        type: 'delete-room-failed',\n        room: room,\n        index: index\n      });\n    });\n  };\n};\nexport var createRoom = function createRoom(name) {\n  return function (dispatch) {\n    dispatch({\n      type: 'create-room-start'\n    });\n  };\n};","map":{"version":3,"sources":["/home/thevpaliy/projects/slack-temp/slack/src/actions/contactsPanel.js"],"names":["Promise","Users","People","Rooms","fetchContacts","dispatch","type","join","getMe","getPeople","getRooms","userResponse","peopleResponse","roomsResponse","user","payload","people","rooms","deleteUser","index","delete","catch","error","deleteRoom","room","createRoom","name"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,UAApB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,KAAxB,QAAqC,aAArC;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM,UAAAC,QAAQ,EAAI;AAC7CA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGAN,IAAAA,OAAO,CAACO,IAAR,CACEN,KAAK,CAACO,KAAN,EADF,EAEEN,MAAM,CAACO,SAAP,EAFF,EAGEN,KAAK,CAACO,QAAN,EAHF,EAIE,UAACC,YAAD,EAAeC,cAAf,EAA+BC,aAA/B,EAAiD;AAC/CR,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,iBADC;AAEPQ,QAAAA,IAAI,EAAEH,YAAY,CAACI,OAFZ;AAGPC,QAAAA,MAAM,EAAEJ,cAAc,CAACG,OAHhB;AAIPE,QAAAA,KAAK,EAAEJ,aAAa,CAACE;AAJd,OAAD,CAAR;AAMD,KAXH;AAaD,GAjB4B;AAAA,CAAtB;AAmBP,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACJ,IAAD,EAAOK,KAAP;AAAA,SAAiB,UAAAd,QAAQ,EAAI;AACrDA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE,mBADC;AAEPQ,MAAAA,IAAI,EAAJA;AAFO,KAAD,CAAR;AAIAb,IAAAA,KAAK,CAACmB,MAAN,CAAaN,IAAb,EAAmBO,KAAnB,CAAyB,UAAAC,KAAK,EAAI;AAChCjB,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,oBADC;AAEPQ,QAAAA,IAAI,EAAJA,IAFO;AAGPK,QAAAA,KAAK,EAALA;AAHO,OAAD,CAAR;AAKD,KAND;AAOD,GAZyB;AAAA,CAAnB;AAcP,OAAO,IAAMI,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAOL,KAAP;AAAA,SAAiB,UAAAd,QAAQ,EAAI;AACrDA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE,mBADC;AAEPkB,MAAAA,IAAI,EAAJA;AAFO,KAAD,CAAR;AAKArB,IAAAA,KAAK,CAACiB,MAAN,CAAaI,IAAb,EAAmBH,KAAnB,CAAyB,UAAAC,KAAK,EAAI;AAChCjB,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,oBADC;AAEPkB,QAAAA,IAAI,EAAJA,IAFO;AAGPL,QAAAA,KAAK,EAALA;AAHO,OAAD,CAAR;AAKD,KAND;AAOD,GAbyB;AAAA,CAAnB;AAeP,OAAO,IAAMM,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD;AAAA,SAAU,UAAArB,QAAQ,EAAI;AAC9CA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGD,GAJyB;AAAA,CAAnB","sourcesContent":["import Promise from 'bluebird'\nimport { Users, People, Rooms } from '../requests'\n\nexport const fetchContacts = () => dispatch => {\n  dispatch({\n    type: 'contacts-start'\n  })\n  Promise.join(\n    Users.getMe(),\n    People.getPeople(),\n    Rooms.getRooms(),\n    (userResponse, peopleResponse, roomsResponse) => {\n      dispatch({\n        type: 'contacts-finish',\n        user: userResponse.payload,\n        people: peopleResponse.payload,\n        rooms: roomsResponse.payload\n      })\n    }\n  )\n}\n\nexport const deleteUser = (user, index) => dispatch => {\n  dispatch({\n    type: 'delete-user-start',\n    user\n  })\n  Users.delete(user).catch(error => {\n    dispatch({\n      type: 'delete-user-failed',\n      user,\n      index\n    })\n  })\n}\n\nexport const deleteRoom = (room, index) => dispatch => {\n  dispatch({\n    type: 'delete-room-start',\n    room\n  })\n\n  Rooms.delete(room).catch(error => {\n    dispatch({\n      type: 'delete-room-failed',\n      room,\n      index\n    })\n  })\n}\n\nexport const createRoom = (name) => dispatch => {\n  dispatch({\n    type: 'create-room-start',\n  })\n}\n"]},"metadata":{},"sourceType":"module"}