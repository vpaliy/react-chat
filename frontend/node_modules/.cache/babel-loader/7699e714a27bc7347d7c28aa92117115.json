{"ast":null,"code":"import _defineProperty from \"/home/thevpaliy/projects/slack/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/thevpaliy/projects/slack/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  people: [],\n  rooms: [],\n  user: {},\n  isLoading: true\n};\n\nvar pushItem = function pushItem(state, action, newItem) {\n  var items = state[action.key].slice();\n  items.splice(action.index, 0, newItem);\n  return _objectSpread({}, state, _defineProperty({}, action.key, items));\n};\n\nvar fetchContacts = function fetchContacts() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'contacts-start':\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case 'contacts-finish':\n      return _objectSpread({}, state, {\n        isLoading: false,\n        user: action.user,\n        rooms: action.rooms,\n        people: action.people\n      });\n\n    case 'delete-user-start':\n      return _objectSpread({}, state, {\n        people: state.people.filter(function (user) {\n          return user.id !== action.user.id;\n        })\n      });\n\n    case 'select-chat':\n      return _objectSpread({}, state, {\n        people: state.people.map(function (user) {\n          return _objectSpread({}, user, {\n            active: user.id === action.id\n          });\n        }),\n        rooms: state.rooms.map(function (room) {\n          return _objectSpread({}, room, {\n            active: room.id === action.id\n          });\n        })\n      });\n\n    case 'delete-room-start':\n      return _objectSpread({}, state, {\n        rooms: state.rooms.filter(function (room) {\n          return room.id !== action.room.id;\n        })\n      });\n\n    case 'delete-room-failed':\n      action.key = 'rooms';\n      return pushItem(state, action, action.room);\n\n    case 'delete-user-failed':\n      action.key = 'people';\n      return pushItem(state, action, action.user);\n\n    default:\n      return state;\n  }\n};\n\nexport default fetchContacts;","map":{"version":3,"sources":["/home/thevpaliy/projects/slack/src/reducers/contactsPanel.js"],"names":["initialState","people","rooms","user","isLoading","pushItem","state","action","newItem","items","key","slice","splice","index","fetchContacts","type","filter","id","map","active","room"],"mappings":";;AACA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,IAAI,EAAE,EAHa;AAInBC,EAAAA,SAAS,EAAE;AAJQ,CAArB;;AAOA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,MAAR,EAAgBC,OAAhB,EAA4B;AAC3C,MAAMC,KAAK,GAAGH,KAAK,CAACC,MAAM,CAACG,GAAR,CAAL,CAAkBC,KAAlB,EAAd;AACAF,EAAAA,KAAK,CAACG,MAAN,CAAaL,MAAM,CAACM,KAApB,EAA2B,CAA3B,EAA8BL,OAA9B;AACA,2BACKF,KADL,sBAEGC,MAAM,CAACG,GAFV,EAEgBD,KAFhB;AAID,CAPD;;AASA,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,GAAgC;AAAA,MAA/BR,KAA+B,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AACpD,UAAQA,MAAM,CAACQ,IAAf;AACE,SAAK,gBAAL;AACE,+BAAWT,KAAX;AAAkBF,QAAAA,SAAS,EAAC;AAA5B;;AACF,SAAK,iBAAL;AACE,+BACKE,KADL;AAEEF,QAAAA,SAAS,EAAE,KAFb;AAGED,QAAAA,IAAI,EAAEI,MAAM,CAACJ,IAHf;AAIED,QAAAA,KAAK,EAAEK,MAAM,CAACL,KAJhB;AAKED,QAAAA,MAAM,EAAEM,MAAM,CAACN;AALjB;;AAOF,SAAK,mBAAL;AACE,+BACKK,KADL;AAEEL,QAAAA,MAAM,EAAEK,KAAK,CAACL,MAAN,CAAae,MAAb,CACN,UAAAb,IAAI;AAAA,iBAAIA,IAAI,CAACc,EAAL,KAAYV,MAAM,CAACJ,IAAP,CAAYc,EAA5B;AAAA,SADE;AAFV;;AAMF,SAAK,aAAL;AACE,+BACKX,KADL;AAEEL,QAAAA,MAAM,EAAEK,KAAK,CAACL,MAAN,CAAaiB,GAAb,CACN,UAAAf,IAAI;AAAA,mCAASA,IAAT;AAAegB,YAAAA,MAAM,EAAEhB,IAAI,CAACc,EAAL,KAAYV,MAAM,CAACU;AAA1C;AAAA,SADE,CAFV;AAKEf,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYgB,GAAZ,CACL,UAAAE,IAAI;AAAA,mCAASA,IAAT;AAAeD,YAAAA,MAAM,EAAEC,IAAI,CAACH,EAAL,KAAYV,MAAM,CAACU;AAA1C;AAAA,SADC;AALT;;AASF,SAAK,mBAAL;AACE,+BACKX,KADL;AAEEJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYc,MAAZ,CACL,UAAAI,IAAI;AAAA,iBAAIA,IAAI,CAACH,EAAL,KAAYV,MAAM,CAACa,IAAP,CAAYH,EAA5B;AAAA,SADC;AAFT;;AAMF,SAAK,oBAAL;AACEV,MAAAA,MAAM,CAACG,GAAP,GAAa,OAAb;AACA,aAAOL,QAAQ,CAACC,KAAD,EAAQC,MAAR,EAAgBA,MAAM,CAACa,IAAvB,CAAf;;AACF,SAAK,oBAAL;AACEb,MAAAA,MAAM,CAACG,GAAP,GAAa,QAAb;AACA,aAAOL,QAAQ,CAACC,KAAD,EAAQC,MAAR,EAAgBA,MAAM,CAACJ,IAAvB,CAAf;;AACF;AACE,aAAOG,KAAP;AA1CJ;AA4CD,CA7CD;;AA+CA,eAAeQ,aAAf","sourcesContent":["\nconst initialState = {\n  people: [],\n  rooms: [],\n  user: {},\n  isLoading: true\n}\n\nconst pushItem = (state, action, newItem) => {\n  const items = state[action.key].slice()\n  items.splice(action.index, 0, newItem)\n  return {\n    ...state,\n    [action.key]: items\n  }\n}\n\nconst fetchContacts = (state=initialState, action) => {\n  switch (action.type) {\n    case 'contacts-start':\n      return {...state, isLoading:true }\n    case 'contacts-finish':\n      return {\n        ...state,\n        isLoading: false,\n        user: action.user,\n        rooms: action.rooms,\n        people: action.people\n      }\n    case 'delete-user-start':\n      return {\n        ...state,\n        people: state.people.filter(\n          user => user.id !== action.user.id\n        )\n      }\n    case 'select-chat':\n      return {\n        ...state,\n        people: state.people.map(\n          user => ({...user, active: user.id === action.id })\n        ),\n        rooms: state.rooms.map(\n          room => ({...room, active: room.id === action.id })\n        )\n      }\n    case 'delete-room-start':\n      return {\n        ...state,\n        rooms: state.rooms.filter(\n          room => room.id !== action.room.id\n        )\n      }\n    case 'delete-room-failed':\n      action.key = 'rooms'\n      return pushItem(state, action, action.room)\n    case 'delete-user-failed':\n      action.key = 'people'\n      return pushItem(state, action, action.user)\n    default:\n      return state\n  }\n}\n\nexport default fetchContacts\n"]},"metadata":{},"sourceType":"module"}